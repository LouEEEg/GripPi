from tkinter import*
from gpiozero import LED
#from smbus2 import SMBus, i2c_msg
import smbus
import time
import sys
from picamera2 import Picamera2, Preview

root=Tk()
root.title("GripPi")
root.minsize(height=500,width=900)
root["bg"]="#0066CC"
#ipadding = {"ipadx": 10, "ipady": 10}

#DEVICE_BUS = 1
#DEVICE_ADDR = 0X15
#bus = smbus.SMBus(DEVICE_BUS)
#bus.write_byte_data(DEVICE_ADDR, 0X00, 0X01)

#Designating LEDs
led1 = LED(15)
led2 = LED(4)
led3 = LED(18)
led4 = LED(17)
led5 = LED(27)
led6 = LED(22)

led1.off()
led2.off()
led3.off()
led4.on()
led5.on()
led6.on()

#Designating camera capture and setup
picam2 = Picamera2()

picam2.start_preview(Preview.QTGL)

preview_config = picam2.create_preview_configuration(main={"size": (640, 640)})
picam2.configure(preview_config)

picam2.start()

time.sleep(1)
picam2.capture_file("bin1.png")

time.sleep(1)
picam2.capture_file("bin2.png")

time.sleep(1)
picam2.capture_file("bin3.png")

photo10 = PhotoImage(file = "bin1.png")

photo20 = PhotoImage(file = "bin2.png")

photo30 = PhotoImage(file = "bin3.png")

def calibrate():
    led1.toggle()
    led2.toggle()
    led3.toggle()
    led4.toggle()
    led5.toggle()
    led6.toggle()
    
def toggle1():
    led1.toggle()
    if led1.is_lit:
       led4.off()
    else :
       led4.on()

def toggle2():
    led2.toggle()
    if led2.is_lit:
       led5.off()
    else:
       led5.on()

def toggle3():
    led3.toggle()
    if led3.is_lit:
       led6.off()
    else:
       led6.on()

def close_gui():
  sys.exit()



def tab1():
    def tab2():
        label11.destroy()
        label12.destroy()
        button11.destroy()
        button12.destroy()
        #Top of page 2
        label21=Label(root,text="BINS",font=("Times_New_Roman",25))
        label21.pack(side=TOP)
        label22=Label(root,text="1",font=("Times_New_Roman",25),background="#0066CC")
        label22.place(relx=.15,rely=.1)
        label23=Label(root,text="2",font=("Times_New_Roman",25),background="#0066CC")
        label23.place(relx=.50,rely=.1)
        label24=Label(root,text="3",font=("Times_New_Roman",25),background="#0066CC")
        label24.place(relx=.85,rely=.1)
        #time.sleep(5)
        
        def back():
            label21.destroy()
            label22.destroy()
            label23.destroy()
            label24.destroy()
            button21.destroy()
            button22.destroy()
            button23.destroy()
            button24.destroy()
            
            tab1()
            
        button21=Button(root,text="BACK",font=("Times_New_Roman",25),command=back,activebackground="red")
        button21.pack(side=BOTTOM)
        button22=Button(root,image=photo10,command=lambda: [toggle1(),update1()],activebackground="red")
        button22.pack(side=LEFT)
        button23=Button(root,image=photo20,command=lambda: [toggle2(),update2()],activebackground="red")
        button23.pack(side=LEFT)
        button24=Button(root,image=photo30,command=lambda: [toggle3(),update3()],activebackground="red")
        button24.pack(side=LEFT)
        
        def update1():
            
            if button22:
                picam2.capture_file("bin1retrieved.png")
                photo11 = PhotoImage(file = "bin1retrieved.png")
                button22.configure(image=photo11)
                #button22.display
                #button23.display
                #button24.display
            else :
                picam2.capture_file("bin1stored.png")
                photo12 = PhotoImage(file = "bin1stored.png")
                button22.configure(image=photo12)
                #button22.display
                #button23.display
                #button24.display
                
        def update2():
            if button23:
                picam2.capture_file("bin2retrieved.png")
                photo21 = PhotoImage(file = "bin2retrieved.png")
                button23.configure(image=photo21)
                #button22.display
                #button23.display
                #button24.display
            else :
                picam2.capture_file("bin2stored.png")
                photo22 = PhotoImage(file = "bin2stored.png")
                button23.configure(image=photo22)
                #button22.display
                #button23.display
                #button24.display
                
        def update3():
            if button24:
                picam2.capture_file("bin3retrieved.png")
                photo31 = PhotoImage(file = "bin3retrieved.png")
                button24.configure(image=photo31)
                #button22.display
                #button23.display
                #button24.display
            else :
                picam2.capture_file("bin3stored.png")
                photo32 = PhotoImage(file = "bin3stored.png")
                button24.configure(image=photo32)
                #button22.display
                #button23.display
                #button24.display


    label11=Label(root,text="HOME",font=("Times_New_Roman",25))
    label11.pack(side=TOP)
    label12=Label(root,text="Please clear the workspace before calibrating!",font=("Times_New_Roman",25))
    label12.place(relx=.5,rely=.6,anchor=CENTER)
    button11=Button(root,text="POWER",font=("Times_New_Roman",25),command=close_gui,activebackground="red")
    button11.pack(side=BOTTOM)
    button12=Button(root,text="CALIBRATE",font=("Times_New_Roman",25),command=tab2,background="green",activebackground="red")
    button12.place(relx=.5,rely=.5,anchor= CENTER)

tab1()

root.mainloop()
